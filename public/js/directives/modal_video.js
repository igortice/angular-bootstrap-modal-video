// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  var templateModalVideo;

  moduleMain.constant('networkState', {
    'NETWORK_EMPTY': 0,
    'NETWORK_IDLE': 1,
    'NETWORK_LOADING': 2,
    'NETWORK_NO_SOURCE': 3
  });

  moduleMain.controller('ModalVideoCtrl', [
    '$scope', '$element', '$attrs', '$timeout', '$filter', '$interval', 'networkState', function($scope, $element, $attrs, $timeout, $filter, $interval, networkState) {
      var current_interval, elementVideo, modalVideo, pauseVideo, secondsToTime, updateCurrentTime;
      modalVideo = $element.find('.modal');
      elementVideo = modalVideo.find('video')[0];
      current_interval = null;
      $scope.errorVideo = false;
      $scope.videoCurrentDuration = "00:00";
      $scope.videoDuration = "00:00";
      $scope.play = false;
      $scope.finish = false;
      $scope.pause = false;
      $scope.full = false;
      modalVideo.on('hide.bs.modal', function() {
        pauseVideo();
      });
      pauseVideo = function() {
        $interval.cancel(current_interval);
        elementVideo.pause();
      };
      updateCurrentTime = function() {
        var time;
        time = secondsToTime(elementVideo.currentTime);
        $scope.progressBar();
        $scope.videoCurrentDuration = time.m + ":" + time.s;
      };
      secondsToTime = function(secs) {
        var divisor_for_minutes, divisor_for_seconds, hours, minutes, obj, seconds;
        hours = Math.floor(secs / (60 * 60));
        divisor_for_minutes = secs % (60 * 60);
        minutes = Math.floor(divisor_for_minutes / 60);
        minutes = minutes >= 10 && minutes || ("0" + minutes);
        divisor_for_seconds = divisor_for_minutes % 60;
        seconds = Math.ceil(divisor_for_seconds);
        seconds = seconds >= 10 && seconds || ("0" + seconds);
        obj = {
          'h': hours,
          'm': minutes,
          's': seconds
        };
        return obj;
      };
      $timeout((function() {
        var time;
        $scope.errorVideo = elementVideo.networkState === networkState.NETWORK_EMPTY || elementVideo.networkState === networkState.NETWORK_NO_SOURCE;
        time = secondsToTime(elementVideo.duration);
        $scope.videoDuration = time.m + ":" + time.s;
      }), 500);
      $scope.progressBar = function() {
        return Math.floor((elementVideo.currentTime * 100) / elementVideo.duration);
      };
      $scope.updateBarProgress = function(event) {
        var current_time, width_parcial, width_porcent, width_total;
        width_total = angular.element(event.target)[0].offsetWidth;
        if (!event.offsetX) {
          event.offsetX = event.pageX - angular.element(event.target).offset().left;
        }
        width_parcial = event.offsetX;
        width_porcent = (width_parcial * 100) / width_total;
        current_time = (width_porcent * elementVideo.duration) / 100;
        elementVideo.currentTime = current_time;
        updateCurrentTime();
      };
      $scope.getModalVideo = function() {
        modalVideo.removeClass('full-size');
        $scope.videoCurrentDuration = "00:00";
        $scope.play = true;
        $scope.pause = false;
        $scope.full = false;
        $scope.finish = false;
        elementVideo.load();
        modalVideo.modal('show');
      };
      return $scope.video = function(comando) {
        switch (comando) {
          case 'pause':
            $scope.play = true;
            $scope.pause = !$scope.play;
            pauseVideo();
            break;
          case 'play':
          case 'repeat':
            $scope.play = false;
            $scope.pause = !$scope.play;
            $scope.finish = !$scope.pause;
            elementVideo.play();
            current_interval = $interval((function() {
              updateCurrentTime();
              if (elementVideo.ended) {
                $scope.play = false;
                $scope.pause = false;
                $scope.finish = true;
                return $interval.cancel(current_interval);
              }
            }), 250);
            break;
          case 'eject':
            modalVideo.modal('hide');
            break;
          case 'full-size':
            $scope.full = true;
            modalVideo.addClass('full-size');
            break;
          case 'normal-size':
            $scope.full = false;
            modalVideo.removeClass('full-size');
        }
      };
    }
  ]);

  templateModalVideo = function(elem, attr) {
    var btn_modal_video, css, full_size_with, html, source_mp4, source_ogg, title_exit, title_full_size, title_normal_size, title_pause, title_play, title_play_repeat, title_time;
    full_size_with = attr.fullSizeWith || '70%';
    title_play = attr.titlePlay || 'play';
    title_pause = attr.titlePause || 'pause';
    title_play_repeat = attr.titlePlayRepeat || 'repeat';
    title_exit = attr.titleExit || 'exit';
    title_time = attr.titleTime || 'time';
    title_full_size = attr.titleFullSize || 'full size';
    title_normal_size = attr.titleNormallSize || 'normal size';
    if (attr.srcOgg) {
      source_ogg = "<source src=\"" + attr.srcOgg + "\" type=\"video/ogg\">";
    }
    if (attr.srcMp4) {
      source_mp4 = "<source src=\"" + attr.srcMp4 + "\" type=\"video/mp4\">";
    }
    btn_modal_video = "<button class=\"btn btn-primary btn-link\" ng-click=\"getModalVideo()\">\n  <i class=\"glyphicon glyphicon-facetime-video\"></i>\n  Watch Video\n</button>";
    if (elem.html()) {
      btn_modal_video = "<div ng-click=\"getModalVideo()\">\n" + (elem.html()) + "\n</div>";
    }
    html = btn_modal_video + "\n<div class=\"modal fade\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <div ng-hide=\"errorVideo\">\n          <div ng-mouseleave=\"showPlayPauseOverVideo=false\" ng-mouseover=\"showPlayPauseOverVideo=true\">\n            <video width=\"100%\">\n              " + source_ogg + "\n              " + source_mp4 + "\n            </video>\n            <div class=\"play-pause\" ng-show=\"showPlayPauseOverVideo\">\n              <div ng-show=\"play\" >\n                <i class='glyphicon glyphicon-play' ng-click=\"video('play')\" title=\"" + title_play + "\"></i>\n              </div>\n              <div ng-show=\"pause\" >\n                <i class='glyphicon glyphicon-pause' ng-click=\"video('pause')\" title=\"" + title_pause + "\"></i>\n              </div>\n            </div>\n          </div>\n          <div class='container-progress'>\n            <div ng-click=\"updateBarProgress($event)\" class=\"progress-update\"></div>\n            <div class=\"progress\">\n              <div class=\"progress-bar active\" role=\"progressbar\" aria-valuenow=\"45\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: {{progressBar()}}%\">\n                {{progressBar()}}%\n              </div>\n            </div>\n          </div>\n          <div class=\"btn-group btn-group-justified\">\n            <div class=\"btn-group ng-hide\" ng-show=\"pause\">\n              <button class=\"btn btn-default\" ng-click=\"video('pause')\" title=\"" + title_pause + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-pause\"></i>\n              </button>\n            </div>\n            <div class=\"btn-group\" ng-show=\"play\">\n              <button class=\"btn btn-default\" ng-click=\"video('play')\" title=\"" + title_play + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-play\"></i>\n              </button>\n            </div>\n            <div class=\"btn-group\" ng-show=\"finish\">\n              <button class=\"btn btn-default\" ng-click=\"video('repeat')\" title=\"" + title_play_repeat + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-repeat\"></i>\n              </button>\n            </div>\n            <div class=\"btn-group\">\n              <button class=\"btn btn-default ng-binding\" title=\"" + title_time + "\">\n                {{videoCurrentDuration}}/{{videoDuration}}\n              </button>\n            </div>\n            <div class=\"btn-group\">\n              <button class=\"btn btn-default\" ng-click=\"video('eject')\" title=\"" + title_exit + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-eject\"></i>\n              </button>\n            </div>\n            <div class=\"btn-group\" ng-hide=\"full\">\n              <button class=\"btn btn-default\" ng-click=\"video('full-size');\" ng-hide=\"full\" title=\"" + title_full_size + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-resize-full\"></i>\n              </button>\n            </div>\n            <div class=\"btn-group ng-hide\" ng-show=\"full\">\n              <button class=\"btn btn-default ng-hide\" ng-click=\"video('normal-size')\" ng-show=\"full\" title=\"" + title_normal_size + "\" type=\"radio\">\n                <i class=\"glyphicon glyphicon-resize-small\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div ng-show=\"errorVideo\">\n          <h1 class='text-center text-muted' style=\"font-size: 20em\">\n            <i class=\"glyphicon glyphicon-facetime-video\"></i>\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>";
    css = "<style type=\"text/css\">\n  modal-video .full-size .modal-lg {\n      width : " + full_size_with + ";\n  }\n  modal-video .container-progress {\n    position: relative;\n  }\n  modal-video .progress {\n    margin-bottom: 5px;\n    position: relative;\n    border-radius: 0 !important;\n  }\n  modal-video .progress-update {\n    cursor: pointer;\n    height: 100%;\n    z-index: 9999999;\n    position: absolute;\n    width: 100%;\n  }\n  modal-video .progress-bar {\n    text-align: right;\n  }\n  modal-video .modal-content, modal-video .btn-group .btn  {\n    -webkit-border-radius: 0px !important\n    -moz-border-radius: 0px !important;\n    -o-border-radius: 0px !important;\n    border-radius: 0px !important;\n    border: 0px !important;\n  }\n  modal-video .modal-body {\n    padding: 1px;\n  }\n  modal-video .play-pause {\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    cursor: pointer;\n    top: 0;\n    color: #ffffff;\n  }\n  modal-video .play-pause > div {\n    margin-top: 15%;\n    font-size: 10em;\n  }\n  modal-video .full-size .play-pause > div {\n    margin-top: 18%;\n    font-size: 15em;\n  }\n</style>";
    return html + css;
  };

  moduleMain.directive('modalVideo', function() {
    var modalVideo;
    modalVideo = {
      restrict: 'E',
      scope: true,
      controller: 'ModalVideoCtrl',
      template: function(elem, attr) {
        return templateModalVideo(elem, attr);
      }
    };
    return modalVideo;
  });

}).call(this);

//# sourceMappingURL=modal_video.js.map
